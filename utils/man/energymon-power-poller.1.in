.TH "@MAN_BINARY_PREFIX_UPPER@\-POWER\-POLLER" "1" "2022-01-20" "energymon" "EnergyMon Utilities"
.SH "NAME"
.LP
@MAN_BINARY_PREFIX@\-power\-poller \- print average power at regular intervals
.SH "SYNPOSIS"
.LP
\fB@MAN_BINARY_PREFIX@\-power\-poller\fP
[\fIOPTION\fP]...
.SH "DESCRIPTION"
.LP
Prints the average power in Watts at regular intervals.
Uses the @MAN_IMPL@ EnergyMon implementation.
.LP
Power 'P' is computed as P=E/t, where 'E' is the measured energy difference
and 't' is the actual time elapsed between updates.
.LP
If no additional options are specified, average power is printed to standard
output at the implementation's minimum update interval, and the program loops
until interrupted with \fBCTRL\-C\fP.
Note that using the default interval is not always desirable, as it may be too
fast and cause unnecessary overhead.
Also, computing power at the minimum update interval can result in noisy data.
.LP
Variation in the number of internal EnergyMon updates between reads causes
noise in the reported power values. If no internal updates are accomplished
between reads, the average power will be reported as 0 and the next non-zero
value reported may be roughly X times larger than normal, where X is similar to
the number of preceding zero-valued reports.
.SH "OPTIONS"
.LP
.TP
\fB\-h\fP, \fB\-\-help\fP
Prints the help screen.
.TP
\fB\-c\fP, \fB\-\-count\fP=\fIN\fP
Stop after \fIN\fP reads.
.TP
\fB\-f\fP, \fB\-\-file\fP=\fIFILE\fP
Write the output to \fIFILE\fP.
.TP
\fB\-F\fP, \fB\-\-force\fP
Force updates faster than the EnergyMon claims.
.TP
\fB\-i\fP, \fB\-\-interval=\fP\fIUS\fP
The update interval in microseconds (\fIUS\fP > 0).
.TP
\fB\-s\fP, \fB\-\-summarize\fP
Print out a summary at completion.
.SH "EXAMPLES"
.TP
\fB@MAN_BINARY_PREFIX@\-power\-poller\fP
Measure average power at the implementation's update interval.
.TP
\fB@MAN_BINARY_PREFIX@\-power\-poller \-i 5000000 \-f power.log\fP
Measure average power every 5 seconds and write output to \fBpower.log\fP.
.TP
\fB@MAN_BINARY_PREFIX@\-power\-poller \-i 100000 \-c 10\fP
Measure average power every 100 milliseconds and stop after 10 readings.
.TP
\fB@MAN_BINARY_PREFIX@\-power\-poller \-i 50000 \-c 100 \-s\fP
Measure average power every 50 milliseconds, stop after 100 readings, and print
a summary.
.SH "BUGS"
.LP
Report bugs upstream at <https://github.com/energymon/energymon>
.SH "SEE ALSO"
.BR @MAN_BINARY_PREFIX@\-file\-provider (1)